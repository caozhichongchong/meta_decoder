}
library(pheatmap)
library(RColorBrewer)
mat= Allele
Color_set = c('#e5e5e5','#ca0020',
'#f4a582','#92c5de','#0571b0')
mat[which(mat=='ref')]=0
mat[which(mat=='A')]=1
mat[which(mat=='T')]=2
mat[which(mat=='G')]=3
mat[which(mat=='C')]=4
mat=matrix(as.numeric(mat),nrow=nrow(mat))
row.names(mat)=row.names(Allele)
colnames(mat)=colnames(Allele)
mat=mat[order(as.numeric(row.names(mat))),]
pheatmap(mat= mat,
color = Color_set,
show_rownames= TRUE,
show_colnames = TRUE,
cluster_cols = TRUE,
legend_labels = c('Major allele','A','T','G','C'),
filename = paste(inputpath,paste(genome,'snp.profile.SNP',sep = '.'),sep = '/'),
cluster_rows = FALSE)}
for (genome in allgenome)
{Allele1=Alleleall[which(Alleleall$refgenome == genome),]
genotypes = unique(Allele1$genotypes)
position = unique(Allele1$position)
Allele = matrix('ref',ncol=length(genotypes),
nrow=length(position))
colnames(Allele)=genotypes
row.names(Allele)=position
for(i in 1:nrow(Allele1))
{
if(Allele1$V2[i]!=toString(Allele1$allele[i]))
{n=which(colnames(Allele)==Allele1$genotypes[i])
m=which(row.names(Allele)==Allele1$position[i])
Allele[m,n]=Allele1$allele[i]}
}
library(pheatmap)
library(RColorBrewer)
mat= Allele
Color_set = c('#e5e5e5','#ca0020',
'#f4a582','#92c5de','#0571b0')
mat[which(mat=='ref')]=0
mat[which(mat=='A')]=1
mat[which(mat=='T')]=2
mat[which(mat=='G')]=3
mat[which(mat=='C')]=4
mat=matrix(as.numeric(mat),nrow=nrow(mat))
row.names(mat)=row.names(Allele)
colnames(mat)=colnames(Allele)
mat=mat[order(as.numeric(row.names(mat))),]
pheatmap(mat= mat,
color = Color_set,
show_rownames= TRUE,
show_colnames = TRUE,
cluster_cols = TRUE,
legend_labels = c('Major allele','A','T','G','C'),
filename = paste(inputpath,paste(genome,'snp.profile.SNP.pdf',sep = '.'),sep = '/'),
cluster_rows = FALSE)}
inputpath = 'example'
#
#inputpath = 'example'
Allele1=read.delim(paste(inputpath,'all.snp.profile',sep = '/'),header=F)
Allele1=Allele1[!duplicated(paste(Allele1$V1,Allele1$V3)),]
Allele1 = Allele1[which(Allele1$V2!=''),]
library(stringr)
Allele1$allele=str_split_fixed(Allele1$V1, "--", 2)[,2]
Allele1$position=str_split_fixed(Allele1$allele, "_", 2)[,1]
Allele1$allele=str_split_fixed(Allele1$allele, "_", 2)[,2]
Allele1$genotypes = paste(str_split_fixed(Allele1$V3, "_", 2)[,1],
str_split_fixed(Allele1$V3, ":", 2)[,2],
sep = ':')
Allele1$refgenome = str_split_fixed(Allele1$V1, "_", 2)[,1]
Alleleall = Allele1
allgenome = unique(Alleleall$refgenome)
for (genome in allgenome)
{Allele1=Alleleall[which(Alleleall$refgenome == genome),]
genotypes = unique(Allele1$genotypes)
position = unique(Allele1$position)
Allele = matrix('ref',ncol=length(genotypes),
nrow=length(position))
colnames(Allele)=genotypes
row.names(Allele)=position
for(i in 1:nrow(Allele1))
{
if(Allele1$V2[i]!=toString(Allele1$allele[i]))
{n=which(colnames(Allele)==Allele1$genotypes[i])
m=which(row.names(Allele)==Allele1$position[i])
Allele[m,n]=Allele1$allele[i]}
}
library(pheatmap)
library(RColorBrewer)
mat= Allele
Color_set = c('#e5e5e5','#ca0020',
'#f4a582','#92c5de','#0571b0')
mat[which(mat=='ref')]=0
mat[which(mat=='A')]=1
mat[which(mat=='T')]=2
mat[which(mat=='G')]=3
mat[which(mat=='C')]=4
mat=matrix(as.numeric(mat),nrow=nrow(mat))
row.names(mat)=row.names(Allele)
colnames(mat)=colnames(Allele)
mat=mat[order(as.numeric(row.names(mat))),]
pheatmap(mat= mat,
color = Color_set,
show_rownames= TRUE,
show_colnames = TRUE,
cluster_cols = TRUE,
legend_labels = c('Major allele','A','T','G','C'),
filename = paste(inputpath,paste(genome,'snp.profile.SNP.pdf',sep = '.'),sep = '/'),
cluster_rows = FALSE)}
View(Allele)
View(Allele1)
Allele1$contig = str_split_fixed(Allele1$V1, "_", 2)[,2]
Allele1$contig = str_split_fixed(Allele1$contig, "--", 2)[,1]
Allele = matrix('ref',ncol=length(genotypes),
nrow=length(position))
colnames(Allele)=genotypes
row.names(Allele)=position
for(i in 1:nrow(Allele1))
{
if(Allele1$V2[i]!=toString(Allele1$allele[i]))
{n=which(colnames(Allele)==Allele1$genotypes[i])
m=which(row.names(Allele)==paste(Allele1$contig[i],Allele1$position[i]))
Allele[m,n]=Allele1$allele[i]}
}
for(i in 1:nrow(Allele1))
{
if(Allele1$V2[i]!=toString(Allele1$allele[i]))
{n=which(colnames(Allele)==Allele1$genotypes[i])
m=which(row.names(Allele)==paste(Allele1$contig[i],Allele1$position[i]))
Allele[m,n]=Allele1$allele[i]}
}
Alleleall = Allele1
allgenome = unique(Alleleall$refgenome)
for (genome in allgenome)
{Allele1=Alleleall[which(Alleleall$refgenome == genome),]
genotypes = unique(Allele1$genotypes)
position = unique(Allele1$position)
Allele = matrix('ref',ncol=length(genotypes),
nrow=length(position))
colnames(Allele)=genotypes
row.names(Allele)=position
for(i in 1:nrow(Allele1))
{
if(Allele1$V2[i]!=toString(Allele1$allele[i]))
{n=which(colnames(Allele)==Allele1$genotypes[i])
m=which(row.names(Allele)==paste(Allele1$contig[i],Allele1$position[i]))
Allele[m,n]=Allele1$allele[i]}
}
)
Alleleall = Allele1
allgenome = unique(Alleleall$refgenome)
for (genome in allgenome)
{Allele1=Alleleall[which(Alleleall$refgenome == genome),]
genotypes = unique(Allele1$genotypes)}
position = unique(Allele1$position)
Allele = matrix('ref',ncol=length(genotypes),
nrow=length(position))
colnames(Allele)=genotypes
row.names(Allele)=position
for(i in 1:nrow(Allele1))
{
if(Allele1$V2[i]!=toString(Allele1$allele[i]))
{n=which(colnames(Allele)==Allele1$genotypes[i])
m=which(row.names(Allele)==paste(Allele1$contig[i],Allele1$position[i]))
Allele[m,n]=Allele1$allele[i]}
}
View(Alleleall)
Alleleall = Allele1
allgenome = unique(Alleleall$refgenome)
genome=allgenome[1]
Allele1=Alleleall[which(Alleleall$refgenome == genome),]
genotypes = unique(Allele1$genotypes)
position = unique(Allele1$position)
Allele = matrix('ref',ncol=length(genotypes),
nrow=length(position))
colnames(Allele)=genotypes
row.names(Allele)=position
for(i in 1:nrow(Allele1))
{
if(Allele1$V2[i]!=toString(Allele1$allele[i]))
{n=which(colnames(Allele)==Allele1$genotypes[i])
m=which(row.names(Allele)==paste(Allele1$contig[i],Allele1$position[i]))
Allele[m,n]=Allele1$allele[i]}
}
Allele1=read.delim(paste(inputpath,'all.snp.profile',sep = '/'),header=F)
Allele1=Allele1[!duplicated(paste(Allele1$V1,Allele1$V3)),]
Allele1 = Allele1[which(Allele1$V2!=''),]
library(stringr)
Allele1$allele=str_split_fixed(Allele1$V1, "--", 2)[,2]
Allele1$position=str_split_fixed(Allele1$allele, "_", 2)[,1]
Allele1$allele=str_split_fixed(Allele1$allele, "_", 2)[,2]
Allele1$genotypes = paste(str_split_fixed(Allele1$V3, "_", 2)[,1],
str_split_fixed(Allele1$V3, ":", 2)[,2],
sep = ':')
Allele1$refgenome = str_split_fixed(Allele1$V1, "_", 2)[,1]
Allele1$contig = str_split_fixed(Allele1$V1, "_", 2)[,2]
Allele1$contig = str_split_fixed(Allele1$contig, "--", 2)[,1]
Alleleall = Allele1
allgenome = unique(Alleleall$refgenome)
Allele1=Alleleall[which(Alleleall$refgenome == genome),]
genotypes = unique(Allele1$genotypes)
position = unique(Allele1$position)
Allele = matrix('ref',ncol=length(genotypes),
nrow=length(position))
colnames(Allele)=genotypes
row.names(Allele)=position
for(i in 1:nrow(Allele1))
{
if(Allele1$V2[i]!=toString(Allele1$allele[i]))
{n=which(colnames(Allele)==Allele1$genotypes[i])
m=which(row.names(Allele)==paste(Allele1$contig[i],Allele1$position[i]))
Allele[m,n]=Allele1$allele[i]}
}
library(pheatmap)
library(RColorBrewer)
mat= Allele
Color_set = c('#e5e5e5','#ca0020',
'#f4a582','#92c5de','#0571b0')
mat[which(mat=='ref')]=0
mat[which(mat=='A')]=1
mat[which(mat=='T')]=2
mat[which(mat=='G')]=3
mat[which(mat=='C')]=4
mat=matrix(as.numeric(mat),nrow=nrow(mat))
row.names(mat)=row.names(Allele)
colnames(mat)=colnames(Allele)
mat=mat[order(as.numeric(row.names(mat))),]
pheatmap(mat= mat,
color = Color_set,
show_rownames= TRUE,
show_colnames = TRUE,
cluster_cols = TRUE,
legend_labels = c('Major allele','A','T','G','C'),
filename = paste(inputpath,paste(genome,'snp.profile.SNP.pdf',sep = '.'),sep = '/'),
cluster_rows = FALSE)
Allele1=Alleleall[which(Alleleall$refgenome == genome),]
genotypes = unique(Allele1$genotypes)
position = unique(Allele1$position)
Allele = matrix('ref',ncol=length(genotypes),
nrow=length(position))
colnames(Allele)=genotypes
row.names(Allele)=position
for(i in 1:nrow(Allele1))
{
if(Allele1$V2[i]!=toString(Allele1$allele[i]))
{n=which(colnames(Allele)==Allele1$genotypes[i])
m=which(row.names(Allele)==paste(Allele1$contig[i],Allele1$position[i]))
Allele[m,n]=Allele1$allele[i]}
}
genotypes = unique(Allele1$genotypes)
position = unique(paste(Allele1$contig[i],Allele1$position[i]))
Allele = matrix('ref',ncol=length(genotypes),
nrow=length(position))
colnames(Allele)=genotypes
row.names(Allele)=position
for(i in 1:nrow(Allele1))
{
if(Allele1$V2[i]!=toString(Allele1$allele[i]))
{n=which(colnames(Allele)==Allele1$genotypes[i])
m=which(row.names(Allele)==paste(Allele1$contig[i],Allele1$position[i]))
Allele[m,n]=Allele1$allele[i]}
}
position
genotypes = unique(Allele1$genotypes)
position = unique(paste(Allele1$contig,Allele1$position))
Allele = matrix('ref',ncol=length(genotypes),
nrow=length(position))
colnames(Allele)=genotypes
row.names(Allele)=position
for(i in 1:nrow(Allele1))
{
if(Allele1$V2[i]!=toString(Allele1$allele[i]))
{n=which(colnames(Allele)==Allele1$genotypes[i])
m=which(row.names(Allele)==paste(Allele1$contig[i],Allele1$position[i]))
Allele[m,n]=Allele1$allele[i]}
}
allcontigs =
empty_Allele=unique(Allele1$contig)
allcontigs = unique(Allele1$contig)
allcontigs = unique(Allele1$contig)
empty_Allele=matrix('empty',nrow = length(allcontigs),ncol=ncol(Allele))
row.names(empty_Allele)=allcontigs
Allele=rbind(Allele,
empty_Allele)
Allele=Allele[order(row.names(Allele))]
Allele1=Alleleall[which(Alleleall$refgenome == genome),]
genotypes = unique(Allele1$genotypes)
position = unique(paste(Allele1$contig,Allele1$position))
Allele = matrix('ref',ncol=length(genotypes),
nrow=length(position))
colnames(Allele)=genotypes
row.names(Allele)=position
for(i in 1:nrow(Allele1))
{
if(Allele1$V2[i]!=toString(Allele1$allele[i]))
{n=which(colnames(Allele)==Allele1$genotypes[i])
m=which(row.names(Allele)==paste(Allele1$contig[i],Allele1$position[i]))
Allele[m,n]=Allele1$allele[i]}
}
allcontigs = unique(Allele1$contig)
empty_Allele=matrix('empty',nrow = length(allcontigs),ncol=ncol(Allele))
row.names(empty_Allele)=allcontigs
Allele=rbind(Allele,
empty_Allele)
Allele=Allele[order(row.names(Allele)),]
genotypes = unique(Allele1$genotypes)
position = unique(paste(Allele1$position,Allele1$contig,sep = '--'))
Allele = matrix('ref',ncol=length(genotypes),
nrow=length(position))
colnames(Allele)=genotypes
row.names(Allele)=position
for(i in 1:nrow(Allele1))
{
if(Allele1$V2[i]!=toString(Allele1$allele[i]))
{n=which(colnames(Allele)==Allele1$genotypes[i])
m=which(row.names(Allele)==paste(Allele1$position[i],Allele1$contig[i],sep = '--'))
Allele[m,n]=Allele1$allele[i]}
}
allcontigs = unique(Allele1$contig)
empty_Allele=matrix('empty',nrow = length(allcontigs),ncol=ncol(Allele))
row.names(empty_Allele)=allcontigs
Allele=rbind(Allele,
empty_Allele)
Allele=Allele[order(row.names(Allele)),]
Allele1=Alleleall[which(Alleleall$refgenome == genome),]
genotypes = unique(Allele1$genotypes)
position = unique(paste(Allele1$contig,Allele1$position,sep = '--'))
Allele = matrix('ref',ncol=length(genotypes),
nrow=length(position))
colnames(Allele)=genotypes
row.names(Allele)=position
for(i in 1:nrow(Allele1))
{
if(Allele1$V2[i]!=toString(Allele1$allele[i]))
{n=which(colnames(Allele)==Allele1$genotypes[i])
m=which(row.names(Allele)==paste(Allele1$contig[i],Allele1$position[i],sep = '--'))
Allele[m,n]=Allele1$allele[i]}
}
allcontigs = unique(Allele1$contig)
empty_Allele=matrix('empty',nrow = length(allcontigs),ncol=ncol(Allele))
row.names(empty_Allele)=allcontigs
Allele=rbind(Allele,
empty_Allele)
Allele=Allele[order(row.names(Allele)),]
genotypes = unique(Allele1$genotypes)
position = unique(paste(Allele1$contig,Allele1$position,sep = '--'))
Allele = matrix('ref',ncol=length(genotypes)+1,
nrow=length(position))
colnames(Allele)=c('POS',genotypes)
row.names(Allele)=position
Allele[,1]=Allele1$position
for(i in 1:nrow(Allele1))
{
if(Allele1$V2[i]!=toString(Allele1$allele[i]))
{n=which(colnames(Allele)==Allele1$genotypes[i])
m=which(row.names(Allele)==paste(Allele1$contig[i],Allele1$position[i],sep = '--'))
Allele[m,n]=Allele1$allele[i]}
}
allcontigs = unique(Allele1$contig)
Allele1$position
Allele[,1]=unique(Allele1$position)
allcontigs = unique(Allele1$contig)
empty_Allele=matrix('empty',nrow = length(allcontigs),ncol=ncol(Allele))
row.names(empty_Allele)=allcontigs
empty_Allele[,1]=0
Allele=rbind(Allele,
empty_Allele)
genotypes = unique(Allele1$genotypes)
contig = unique(Allele1$contig[i])
position = unique(Allele1$position[i])
Allele = matrix('ref',ncol=length(genotypes)+1,
nrow=length(position))
colnames(Allele)=c('POS',genotypes)
row.names(Allele)=contig
Allele[,1]=position
for(i in 1:nrow(Allele1))
{
if(Allele1$V2[i]!=toString(Allele1$allele[i]))
{n=which(colnames(Allele)==Allele1$genotypes[i])
m=which(row.names(Allele)==Allele1$contig[i])
Allele[m,n]=Allele1$allele[i]}
}
allcontigs = unique(Allele1$contig)
empty_Allele=matrix('empty',nrow = length(allcontigs),ncol=ncol(Allele))
row.names(empty_Allele)=allcontigs
empty_Allele[,1]=0
Allele=rbind(Allele,
empty_Allele)
genotypes = unique(Allele1$genotypes)
contig = unique(Allele1$contig)
position = unique(paste(Allele1$contig,Allele1$position))
Allele = matrix('ref',ncol=length(genotypes)+1,
nrow=length(position))
colnames(Allele)=c('POS',genotypes)
row.names(Allele)=contig
Allele[,1]=unique(Allele1$position)
for(i in 1:nrow(Allele1))
{
if(Allele1$V2[i]!=toString(Allele1$allele[i]))
{n=which(colnames(Allele)==Allele1$genotypes[i])
m=which(row.names(Allele)==paste(Allele1$contig[i],Allele1$position[i]))
Allele[m,n]=Allele1$allele[i]}
}
row.names(Allele)=str_split_fixed(position, " ", 2)[,1]
genotypes = unique(Allele1$genotypes)
contig = unique(Allele1$contig)
position = unique(paste(Allele1$contig,Allele1$position))
Allele = matrix('ref',ncol=length(genotypes)+1,
nrow=length(position))
colnames(Allele)=c('POS',genotypes)
row.names(Allele)=position
Allele[,1]=unique(Allele1$position)
for(i in 1:nrow(Allele1))
{
if(Allele1$V2[i]!=toString(Allele1$allele[i]))
{n=which(colnames(Allele)==Allele1$genotypes[i])
m=which(row.names(Allele)==paste(Allele1$contig[i],Allele1$position[i]))
Allele[m,n]=Allele1$allele[i]}
}
row.names(Allele)=str_split_fixed(position, " ", 2)[,1]
row.names(Allele)=str_split_fixed(position, " ", 2)[,1]
position
allcontigs = unique(Allele1$contig)
empty_Allele=matrix('empty',nrow = length(allcontigs),ncol=ncol(Allele))
row.names(empty_Allele)=allcontigs
empty_Allele[,1]=0
Allele=rbind(Allele,
empty_Allele)
Allele=Allele[order(paste(Allele[,1],row.names(Allele))),]
Allele=Allele[order(paste(Allele[,1],row.names(Allele))),]
paste(Allele[,1],row.names(Allele)
)
Allele=Allele[order(Allele[,1]),]
Allele=Allele[order(row.names(Allele)),]
row.names(Allele)[which(Allele[,1]!='0')]=Allele[which(Allele[,1]!='0'),1]
library(pheatmap)
library(RColorBrewer)
mat= Allele
Color_set = c('#ffffff','#e5e5e5','#ca0020',
'#f4a582','#92c5de','#0571b0')
mat[which(mat=='empty')]=-1
mat[which(mat=='ref')]=0
mat[which(mat=='A')]=1
mat[which(mat=='T')]=2
mat[which(mat=='G')]=3
mat[which(mat=='C')]=4
mat=matrix(as.numeric(mat),nrow=nrow(mat))
row.names(mat)=row.names(Allele)
colnames(mat)=colnames(Allele)
View(mat)
pheatmap(mat= mat,
color = Color_set,
show_rownames= TRUE,
show_colnames = TRUE,
cluster_cols = TRUE,
legend_labels = c('','Major allele','A','T','G','C'),
cluster_rows = FALSE,
filename = paste(inputpath,paste(genome,'snp.profile.SNP.pdf',sep = '.'),sep = '/'))
pheatmap(mat= mat,
color = Color_set,
show_rownames= TRUE,
show_colnames = TRUE,
cluster_cols = TRUE,
legend_labels = c('','Major allele','A','T','G','C'),
cluster_rows = FALSE#,
# filename = paste(inputpath,paste(genome,'snp.profile.SNP.pdf',sep = '.'),sep = '/')
)
mat= Allele[,-1]
Color_set = c('#ffffff','#e5e5e5','#ca0020',
'#f4a582','#92c5de','#0571b0')
mat[which(mat=='empty')]=-1
mat[which(mat=='ref')]=0
mat[which(mat=='A')]=1
mat[which(mat=='T')]=2
mat[which(mat=='G')]=3
mat[which(mat=='C')]=4
mat=matrix(as.numeric(mat),nrow=nrow(mat))
row.names(mat)=row.names(Allele)
colnames(mat)=colnames(Allele)
pheatmap(mat= mat,
color = Color_set,
show_rownames= TRUE,
show_colnames = TRUE,
cluster_cols = TRUE,
legend_labels = c('','Major allele','A','T','G','C'),
cluster_rows = FALSE#,
# filename = paste(inputpath,paste(genome,'snp.profile.SNP.pdf',sep = '.'),sep = '/')
)
pheatmap(mat= mat,
color = Color_set,
show_rownames= TRUE,
show_colnames = TRUE,
cluster_cols = TRUE,
legend_breaks =   c(-1,0,1,2,3,4),
legend_labels = c('','Major allele','A','T','G','C'),
cluster_rows = FALSE#,
# filename = paste(inputpath,paste(genome,'snp.profile.SNP.pdf',sep = '.'),sep = '/')
)
pheatmap(mat= mat,
color = Color_set,
show_rownames= TRUE,
show_colnames = TRUE,
cluster_cols = TRUE,
legend_breaks =   c(-1,0,1,2,3,4),
legend_labels = c('','Major allele','A','T','G','C'),
cluster_rows = FALSE,
filename = paste(inputpath,paste(genome,'snp.profile.SNP.pdf',sep = '.'),sep = '/')
)
